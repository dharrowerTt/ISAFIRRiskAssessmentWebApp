Imports System.Data.SqlClient
Imports System.Configuration

Partial Class VulnerabilityAssessmentIntro
    Inherits System.Web.UI.Page

    Private ReadOnly connString As String = ConfigurationManager.ConnectionStrings("MembershipDB").ConnectionString
    Private demoMode As Boolean = False

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not IsPostBack Then
            Dim assessmentId As String = Request.QueryString("assessment_id")
            If String.IsNullOrEmpty(assessmentId) Then
                demoMode = True
                hfAssessmentID.Value = "0"
                LoadDemoAssessmentDetails()
            Else
                demoMode = False
                hfAssessmentID.Value = assessmentId
                LoadAssessmentDetails(Convert.ToInt32(assessmentId))
            End If

            ' Build tile links with section and optional demo query param
            Dim demoParam As String = If(demoMode, "&demo=true", "")
            btnResilience.NavigateUrl = $"VulnerabilitySection.aspx?section=Resilience{demoParam}"
            btnSecurity.NavigateUrl = $"VulnerabilitySection.aspx?section=Security{demoParam}"
            btnDependencies.NavigateUrl = $"VulnerabilitySection.aspx?section=Dependencies{demoParam}"
            btnCyber.NavigateUrl = $"VulnerabilitySection.aspx?section=Cyber{demoParam}"

            ' Optional: update tile styles based on progress
            SetSectionProgress(btnResilience, "Resilience")
            SetSectionProgress(btnSecurity, "Security")
            SetSectionProgress(btnDependencies, "Dependencies")
            SetSectionProgress(btnCyber, "Cyber")
        End If
    End Sub


    Private Sub LoadDemoAssessmentDetails()
        litAssessmentID.Text = "DEMO123"
        litFacility.Text = "Sample Facility"
        litAssessor.Text = "Jane Doe"
        litContact.Text = "jane.doe@example.com / 555-1234"
        litStartDate.Text = "2025-04-01"
    End Sub

    Private Sub LoadAssessmentDetails(assessmentId As Integer)
        Using conn As New SqlConnection(connString)
            conn.Open()
            Dim cmd As New SqlCommand("
                SELECT a.ID, f.FacilityName, a.AssessorName, a.ContactInfo, a.StartDate
                FROM Assessment a
                INNER JOIN Facility f ON a.FacilityID = f.ID
                WHERE a.ID = @AssessmentID", conn)
            cmd.Parameters.AddWithValue("@AssessmentID", assessmentId)

            Using reader = cmd.ExecuteReader()
                If reader.Read() Then
                    litAssessmentID.Text = reader("ID").ToString()
                    litFacility.Text = reader("FacilityName").ToString()
                    litAssessor.Text = reader("AssessorName").ToString()
                    litContact.Text = reader("ContactInfo").ToString()
                    litStartDate.Text = Convert.ToDateTime(reader("StartDate")).ToString("yyyy-MM-dd")
                End If
            End Using
        End Using
    End Sub

    Private Sub SetSectionProgress(link As HyperLink, section As String)
        Dim percentComplete As Integer = GetCompletionPercent(section)

        If percentComplete = 100 Then
            link.CssClass = link.CssClass.Replace("not-started", "complete")
        ElseIf percentComplete > 0 Then
            link.CssClass = link.CssClass.Replace("not-started", "partial")
        End If
    End Sub


    Private Function GetCompletionPercent(section As String) As Integer
        ' Placeholder logic; replace with actual tally query
        ' E.g., count answered questions for given section from database
        Return 0
    End Function

    Protected Sub btnComplete_Click(sender As Object, e As EventArgs)
        Response.Redirect("Summary.aspx")
    End Sub
End Class
